local _device = "detector_geiger"
-- local is_anm_playing = false
local tg_acon = 0
local tg_acon_step = 180


function on_game_start()
    RegisterScriptCallback("on_key_press", on_key_press)
end


function actor_on_update()
    -- local env_rads = math.floor(level.get_env_rads() * 2500)
    local env_rads = arszi_radiation and math.floor(arszi_radiation.environmental_radiation * 2500) or math.floor(level.get_env_rads() * 2500)
    local rads = math.floor(db.actor.radiation * 10000 * 0.387)

    if env_rads > rads then
        item_device.dosimeter_env_rads_mode = true
    else
        item_device.dosimeter_env_rads_mode = false
    end

    --try play sound
    local actor = db.actor
    local radiation = actor.radiation
    local tg = time_global()
    if tg > tg_acon then
        tg_acon = tg + tg_acon_step

        if (radiation > 0) then
            if (math.random() < radiation) then
                radiation = (radiation > 0.5) and (math.random() < radiation / 1.3) and "click3" or math.random(8)
                local snd = sound_object("detectors\\geiger_" .. radiation)
                snd:play(actor, 0, sound_object.s2d)
            end
        end
    end
end


function on_key_press(key) -- on_key_release(key)
    if key ~= DIK_keys["MOUSE_1"] then return end
   -- if is_anm_playing then return end
    if not is_empty(_GUIs) then return end --if some ui opened and we click left mouse button - do nothing

    local detector = db.actor:active_detector()
    local wep = db.actor:active_item()

    if detector and (detector:section() == _device) and (not wep) then
        local state = detector:get_state()
        if item_device.is_device_charged(detector) and state == 0 then

            game.only_allow_movekeys(true)

            if item_device.dosimeter_env_rads_mode then
                utils_obj.play_sound("new_detectors\\dosimeter\\dosimeter_modeswitch")
                Invoke("geiger_mode_switch_te0", 0.1, function()
                    item_device.dosimeter_env_rads_mode = false
                    actor_menu.set_msg(1, game.translate_string("st_dosimeter_mode")..": "..game.translate_string("st_actor_rads") , 3)
                end)
                Invoke("geiger_mode_switch_te1", 0.1, function()
                    game.only_allow_movekeys(false)
                  --  is_anm_playing = false
                end)
            else
                utils_obj.play_sound("new_detectors\\dosimeter\\dosimeter_modeswitch_b")
                Invoke("geiger_mode_switch_te0", 0.1, function()
                    item_device.dosimeter_env_rads_mode = true
                    actor_menu.set_msg(1, game.translate_string("st_dosimeter_mode")..": "..game.translate_string("st_environment_rads") , 3)
                end)
                Invoke("geiger_mode_switch_te1", 0.1, function()
                    game.only_allow_movekeys(false)
                  --  is_anm_playing = false
                end)
            end
        end
    end
end


----------------------------------------
-- utils cus i'm lazy to type one more string and "return true" at the end for some reason
----------------------------------------
function Invoke(name, time, action)
    CreateTimeEvent("liz_geiger_overhaul", name, time, function()
        action()
        return true
    end)
end
